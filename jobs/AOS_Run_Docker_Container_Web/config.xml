<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>DockerServer</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${platform}</arg1>
        <arg2>windows</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.plugins.powershell.PowerShell plugin="powershell@1.3">
          <command>$ContainerRunning= (docker ps -q -f name=aos_postgres ) | Out-String
IF([string]::IsNullOrEmpty($ContainerRunning)) {            
    Write-Host &quot;Starting AOS Postgres Container&quot;
    $ContainerExists=(docker ps -q -a -f name=aos_postgres )
    IF(![string]::IsNullOrEmpty($ContainerExists)) {
        docker rm aos_postgres
    }
    docker run -d -p 5432:5432 --name aos_postgres --hostname aosdb.aos.com performancetesting/aos-postgres            
} else {            
    Write-Host &quot;AOS Postgres Container is already running&quot;            
}

$ContainerRunning= (docker ps -a -f name=aos_tomcat) | Out-String
$localIpAddress=((ipconfig | findstr [0-9].\.)[0]).Split()[-1]

IF(!([string]::IsNullOrEmpty($ContainerRunning))) {            
    Write-Host &quot;AOS Tomcat is running: Shutting it down&quot;
    docker rm -f aos_tomcat       
} 
Write-Host &quot;IP Config&quot; $localIpAddress
docker run -d -p 8000:8080 -p 8009:8009 --name aos_tomcat --hostname aosweb.aos.com --add-host DockerServer:$localIpAddress -e &quot;POSTGRES_PORT=5432&quot; -e &quot;POSTGRES_IP=DockerServer&quot; -e &quot;MAIN_PORT=8000&quot; -e &quot;ACCOUNT_PORT=8081&quot; -e &apos;MAIN_IP=DockerServer&apos; -e &quot;ACCOUNT_IP=DockerServer&quot; aos_tomcat</command>
        </hudson.plugins.powershell.PowerShell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
    <org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder plugin="conditional-buildstep@1.3.5">
      <runner class="org.jenkins_ci.plugins.run_condition.BuildStepRunner$Fail" plugin="run-condition@1.0"/>
      <runCondition class="org.jenkins_ci.plugins.run_condition.core.StringsMatchCondition" plugin="run-condition@1.0">
        <arg1>${platform}</arg1>
        <arg2>linux</arg2>
        <ignoreCase>false</ignoreCase>
      </runCondition>
      <conditionalbuilders>
        <hudson.tasks.Shell>
          <command>if [ ! &quot;$(docker ps -q -f name=aos_postgres)&quot; ]; then

	echo &quot;Starting database&quot;
	docker run -d -p 5432:5432 --name aos_postgres --hostname aosdb.aos.com --net demo-net performancetesting/aos-postgres

else

	echo &quot;Database is up&quot;
        
fi

IP=$(/sbin/ifconfig ens34 | grep &apos;inet addr&apos; | awk {&apos;print $2&apos;} | cut -d&quot;:&quot; -f2)

# Start aos container
docker run -d -p 8000:8000 -p 8009:8009 --net demo-net --name aos_tomcat --hostname aosweb.aos.com --add-host DockerServer:$IP aos_tomcat</command>
        </hudson.tasks.Shell>
      </conditionalbuilders>
    </org.jenkinsci.plugins.conditionalbuildstep.ConditionalBuilder>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>